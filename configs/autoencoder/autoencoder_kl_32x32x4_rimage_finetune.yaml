model:
  base_learning_rate: 4.5e-8 #学习率可进行调整
  target: ldm.models.autoencoder.AutoencoderKL_rimage_finetune
  params:
    ckpt_path: '/SD-VAE-weights/768-v-ema-first-stage-VAE.ckpt'
    monitor: "val/rec_loss" #重建loss
    embed_dim: 4 
    lossconfig:
      target: ldm.modules.losses.LPIPSWithDiscriminator
      params:
        disc_start: 50001
        kl_weight: 1 #used 0.000001, 1.0e-08, K aneleaning 0.1, 
        disc_weight: 0.5
        

    ddconfig:
      double_z: True
      z_channels: 4
      resolution: 256
      in_channels: 3
      out_ch: 3
      ch: 128
      ch_mult: [ 1,2,4,4 ]  # num_down = len(ch_mult)-1
      num_res_blocks: 2
      attn_resolutions: [ ]
      dropout: 0.0

data:
  target: main.DataModuleFromConfig
  params:
    batch_size:  4
    # num_workers: 2
    wrap: false
    train:
      target: ldm.data.finetune.ImageNetTrain
      params:
        config:
          size: 256
          shuffle: false 
    validation:
      target: ldm.data.finetune.ImageNetValidation
      params:
        config:
          size: 256
          shuffle: false 
    test:
      target: ldm.data.finetune.ImageNetValidation
      params:
        config:
          size: 256
          shuffle: false 


lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000
        max_images: 8
        increase_log_steps: True

  trainer:
    benchmark: True
    accumulate_grad_batches: 2
    gpus: 1
    max_epochs: 1000
  
  # logger:
  #   target: pytorch_lightning.loggers.TensorBoardLogger
  #   params:
  #     save_dir: ./logs
  #     name: autoencoder_experiment